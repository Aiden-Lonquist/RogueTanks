using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class RoomTemplateData : MonoBehaviour
{
    public int roomTemplateNumber;
    //private List<Vector2> templateSpaces = new List<Vector2>();


    // Start is called before the first frame update
    void Start()
    {

    }

    // Update is called once per frame
    void Update()
    {
        
    }


    public List<Vector2> GetAvailablePlacements(int templateNum)
    {
        switch (templateNum)
        {
            case 1:
                //Debug.Log("Getting template 1 data");
                List<Vector2> templateSpaces1 = new()
                {
                    new Vector2(-8, 4),
                    new Vector2(-7, 4),
                    new Vector2(-6, 4),
                    new Vector2(-5, 4),
                    new Vector2(-4, 4),
                    new Vector2(-3, 4),
                    new Vector2(3, 4),
                    new Vector2(4, 4),
                    new Vector2(5, 4),
                    new Vector2(6, 4),
                    new Vector2(7, 4),
                    new Vector2(8, 4),
                    new Vector2(-8, 3),
                    new Vector2(-7, 3),
                    new Vector2(-6, 3),
                    new Vector2(-5, 3),
                    new Vector2(-4, 3),
                    new Vector2(-3, 3),
                    new Vector2(3, 3),
                    new Vector2(4, 3),
                    new Vector2(5, 3),
                    new Vector2(6, 3),
                    new Vector2(7, 3),
                    new Vector2(8, 3),
                    new Vector2(-6, 2),
                    new Vector2(-5, 2),
                    new Vector2(-4, 2),
                    new Vector2(-3, 2),
                    new Vector2(-1, 2),
                    new Vector2(0, 2),
                    new Vector2(1, 2),
                    new Vector2(3, 2),
                    new Vector2(4, 2),
                    new Vector2(5, 2),
                    new Vector2(6, 2),
                    new Vector2(-6, 1),
                    new Vector2(-5, 1),
                    new Vector2(-4, 1),
                    new Vector2(-3, 1),
                    new Vector2(-2, 1),
                    new Vector2(-1, 1),
                    new Vector2(0, 1),
                    new Vector2(1, 1),
                    new Vector2(2, 1),
                    new Vector2(3, 1),
                    new Vector2(4, 1),
                    new Vector2(5, 1),
                    new Vector2(6, 1),
                    new Vector2(-6, 0),
                    new Vector2(-3, 0),
                    new Vector2(-2, 0),
                    new Vector2(-1, 0),
                    new Vector2(0, 0),
                    new Vector2(1, 0),
                    new Vector2(2, 0),
                    new Vector2(3, 0),
                    new Vector2(6, 0),
                    new Vector2(-6, -1),
                    new Vector2(-5, -1),
                    new Vector2(-4, -1),
                    new Vector2(-3, -1),
                    new Vector2(-2, -1),
                    new Vector2(-1, -1),
                    new Vector2(0, -1),
                    new Vector2(1, -1),
                    new Vector2(2, -1),
                    new Vector2(3, -1),
                    new Vector2(4, -1),
                    new Vector2(5, -1),
                    new Vector2(6, -1),
                    new Vector2(-6, -2),
                    new Vector2(-5, -2),
                    new Vector2(-4, -2),
                    new Vector2(-3, -2),
                    new Vector2(-1, -2),
                    new Vector2(0, -2),
                    new Vector2(1, -2),
                    new Vector2(3, -2),
                    new Vector2(4, -2),
                    new Vector2(5, -2),
                    new Vector2(6, -2),
                    new Vector2(-8, -3),
                    new Vector2(-7, -3),
                    new Vector2(-6, -3),
                    new Vector2(-5, -3),
                    new Vector2(-4, -3),
                    new Vector2(-3, -3),
                    new Vector2(3, -3),
                    new Vector2(4, -3),
                    new Vector2(5, -3),
                    new Vector2(6, -3),
                    new Vector2(7, -3),
                    new Vector2(8, -3),
                    new Vector2(-8, -4),
                    new Vector2(-7, -4),
                    new Vector2(-6, -4),
                    new Vector2(-5, -4),
                    new Vector2(-4, -4),
                    new Vector2(-3, -4),
                    new Vector2(3, -4),
                    new Vector2(4, -4),
                    new Vector2(5, -4),
                    new Vector2(6, -4),
                    new Vector2(7, -4),
                    new Vector2(8, -4)
                };
                return templateSpaces1;
            case 2:
                //Debug.Log("Getting template 2 data");
                List<Vector2> templateSpaces2 = new()
                {
                    new Vector2(-8, 4),
                    new Vector2(-7, 4),
                    new Vector2(-6, 4),
                    new Vector2(-5, 4),
                    new Vector2(-4, 4),
                    new Vector2(-2, 4),
                    new Vector2(2, 4),
                    new Vector2(4, 4),
                    new Vector2(5, 4),
                    new Vector2(6, 4),
                    new Vector2(7, 4),
                    new Vector2(8, 4),
                    new Vector2(-8, 3),
                    new Vector2(-7, 3),
                    new Vector2(-6, 3),
                    new Vector2(-5, 3),
                    new Vector2(-4, 3),
                    new Vector2(-3, 3),
                    new Vector2(-2, 3),
                    new Vector2(2, 3),
                    new Vector2(3, 3),
                    new Vector2(4, 3),
                    new Vector2(5, 3),
                    new Vector2(6, 3),
                    new Vector2(7, 3),
                    new Vector2(8, 3),
                    new Vector2(-8, 2),
                    new Vector2(-7, 2),
                    new Vector2(-4, 2),
                    new Vector2(-3, 2),
                    new Vector2(-2, 2),
                    new Vector2(2, 2),
                    new Vector2(3, 2),
                    new Vector2(4, 2),
                    new Vector2(7, 2),
                    new Vector2(8, 2),
                    new Vector2(-6, 1),
                    new Vector2(-4, 1),
                    new Vector2(-3, 1),
                    new Vector2(-2, 1),
                    new Vector2(-1, 1),
                    new Vector2(1, 1),
                    new Vector2(2, 1),
                    new Vector2(3, 1),
                    new Vector2(4, 1),
                    new Vector2(6, 1),
                    new Vector2(-6, 0),
                    new Vector2(-3, 0),
                    new Vector2(-2, 0),
                    new Vector2(-1, 0),
                    new Vector2(0, 0),
                    new Vector2(1, 0),
                    new Vector2(2, 0),
                    new Vector2(3, 0),
                    new Vector2(6, 0),
                    new Vector2(-6, -1),
                    new Vector2(-4, -1),
                    new Vector2(-3, -1),
                    new Vector2(-2, -1),
                    new Vector2(-1, -1),
                    new Vector2(1, -1),
                    new Vector2(2, -1),
                    new Vector2(3, -1),
                    new Vector2(4, -1),
                    new Vector2(6, -1),
                    new Vector2(-8, -2),
                    new Vector2(-7, -2),
                    new Vector2(-4, -2),
                    new Vector2(-3, -2),
                    new Vector2(-2, -2),
                    new Vector2(2, -2),
                    new Vector2(3, -2),
                    new Vector2(4, -2),
                    new Vector2(7, -2),
                    new Vector2(8, -2),
                    new Vector2(-8, -3),
                    new Vector2(-7, -3),
                    new Vector2(-6, -3),
                    new Vector2(-5, -3),
                    new Vector2(-4, -3),
                    new Vector2(-3, -3),
                    new Vector2(-2, -3),
                    new Vector2(2, -3),
                    new Vector2(3, -3),
                    new Vector2(4, -3),
                    new Vector2(5, -3),
                    new Vector2(6, -3),
                    new Vector2(7, -3),
                    new Vector2(8, -3),
                    new Vector2(-8, -4),
                    new Vector2(-7, -4),
                    new Vector2(-6, -4),
                    new Vector2(-5, -4),
                    new Vector2(-4, -4),
                    new Vector2(-2, -4),
                    new Vector2(2, -4),
                    new Vector2(4, -4),
                    new Vector2(5, -4),
                    new Vector2(6, -4),
                    new Vector2(7, -4),
                    new Vector2(8, -4)
                };
                return templateSpaces2;
            case 3:
                //Debug.Log("Getting template 3 data");
                List<Vector2> templateSpaces3 = new()
                {
                    new Vector2(-8, 4),
                    new Vector2(-7, 4),
                    new Vector2(-6, 4),
                    new Vector2(-5, 4),
                    new Vector2(-4, 4),
                    new Vector2(-3, 4),
                    new Vector2(-2, 4),
                    new Vector2(2, 4),
                    new Vector2(3, 4),
                    new Vector2(4, 4),
                    new Vector2(5, 4),
                    new Vector2(6, 4),
                    new Vector2(7, 4),
                    new Vector2(8, 4),
                    new Vector2(-8, 3),
                    new Vector2(-7, 3),
                    new Vector2(-5, 3),
                    new Vector2(-4, 3),
                    new Vector2(-3, 3),
                    new Vector2(-2, 3),
                    new Vector2(2, 3),
                    new Vector2(3, 3),
                    new Vector2(4, 3),
                    new Vector2(5, 3),
                    new Vector2(7, 3),
                    new Vector2(8, 3),
                    new Vector2(-8, 2),
                    new Vector2(-7, 2),
                    new Vector2(-5, 2),
                    new Vector2(-4, 2),
                    new Vector2(-2, 2),
                    new Vector2(-1, 2),
                    new Vector2(0, 2),
                    new Vector2(1, 2),
                    new Vector2(2, 2),
                    new Vector2(4, 2),
                    new Vector2(5, 2),
                    new Vector2(7, 2),
                    new Vector2(8, 2),
                    new Vector2(-6, 1),
                    new Vector2(-5, 1),
                    new Vector2(-4, 1),
                    new Vector2(-2, 1),
                    new Vector2(-1, 1),
                    new Vector2(1, 1),
                    new Vector2(2, 1),
                    new Vector2(4, 1),
                    new Vector2(5, 1),
                    new Vector2(6, 1),
                    new Vector2(-6, 0),
                    new Vector2(-5, 0),
                    new Vector2(-4, 0),
                    new Vector2(-2, 0),
                    new Vector2(-1, 0),
                    new Vector2(1, 0),
                    new Vector2(2, 0),
                    new Vector2(4, 0),
                    new Vector2(5, 0),
                    new Vector2(6, 0),
                    new Vector2(-6, -1),
                    new Vector2(-5, -1),
                    new Vector2(-4, -1),
                    new Vector2(-2, -1),
                    new Vector2(-1, -1),
                    new Vector2(1, -1),
                    new Vector2(2, -1),
                    new Vector2(4, -1),
                    new Vector2(5, -1),
                    new Vector2(6, -1),
                    new Vector2(-8, -2),
                    new Vector2(-7, -2),
                    new Vector2(-5, -2),
                    new Vector2(-4, -2),
                    new Vector2(-2, -2),
                    new Vector2(-1, -2),
                    new Vector2(0, -2),
                    new Vector2(1, -2),
                    new Vector2(2, -2),
                    new Vector2(4, -2),
                    new Vector2(5, -2),
                    new Vector2(7, -2),
                    new Vector2(8, -2),
                    new Vector2(-8, -3),
                    new Vector2(-7, -3),
                    new Vector2(-5, -3),
                    new Vector2(-4, -3),
                    new Vector2(-3, -3),
                    new Vector2(-2, -3),
                    new Vector2(2, -3),
                    new Vector2(3, -3),
                    new Vector2(4, -3),
                    new Vector2(5, -3),
                    new Vector2(7, -3),
                    new Vector2(8, -3),
                    new Vector2(-8, -4),
                    new Vector2(-7, -4),
                    new Vector2(-6, -4),
                    new Vector2(-5, -4),
                    new Vector2(-4, -4),
                    new Vector2(-3, -4),
                    new Vector2(-2, -4),
                    new Vector2(2, -4),
                    new Vector2(3, -4),
                    new Vector2(4, -4),
                    new Vector2(5, -4),
                    new Vector2(6, -4),
                    new Vector2(7, -4),
                    new Vector2(8, -4)
                };
                return templateSpaces3;
            case 4:
                //Debug.Log("Getting template 4 data");
                List<Vector2> templateSpaces4 = new()
                {
                    new Vector2(-8, 4),
                    new Vector2(-7, 4),
                    new Vector2(-6, 4),
                    new Vector2(-5, 4),
                    new Vector2(-4, 4),
                    new Vector2(-3, 4),
                    new Vector2(-2, 4),
                    new Vector2(2, 4),
                    new Vector2(3, 4),
                    new Vector2(4, 4),
                    new Vector2(5, 4),
                    new Vector2(6, 4),
                    new Vector2(7, 4),
                    new Vector2(8, 4),
                    new Vector2(-8, 3),
                    new Vector2(-7, 3),
                    new Vector2(-6, 3),
                    new Vector2(-5, 3),
                    new Vector2(-4, 3),
                    new Vector2(-3, 3),
                    new Vector2(-2, 3),
                    new Vector2(2, 3),
                    new Vector2(3, 3),
                    new Vector2(4, 3),
                    new Vector2(5, 3),
                    new Vector2(6, 3),
                    new Vector2(7, 3),
                    new Vector2(8, 3),
                    new Vector2(5, 2),
                    new Vector2(6, 2),
                    new Vector2(7, 2),
                    new Vector2(-6, 1),
                    new Vector2(-5, 1),
                    new Vector2(-4, 1),
                    new Vector2(-3, 1),
                    new Vector2(-2, 1),
                    new Vector2(-1, 1),
                    new Vector2(0, 1),
                    new Vector2(1, 1),
                    new Vector2(2, 1),
                    new Vector2(3, 1),
                    new Vector2(4, 1),
                    new Vector2(5, 1),
                    new Vector2(6, 1),
                    new Vector2(-6, 0),
                    new Vector2(-5, 0),
                    new Vector2(-4, 0),
                    new Vector2(-3, 0),
                    new Vector2(-2, 0),
                    new Vector2(-1, 0),
                    new Vector2(0, 0),
                    new Vector2(1, 0),
                    new Vector2(2, 0),
                    new Vector2(3, 0),
                    new Vector2(4, 0),
                    new Vector2(5, 0),
                    new Vector2(6, 0),
                    new Vector2(-6, -1),
                    new Vector2(-5, -1),
                    new Vector2(-4, -1),
                    new Vector2(-3, -1),
                    new Vector2(-2, -1),
                    new Vector2(-1, -1),
                    new Vector2(0, -1),
                    new Vector2(1, -1),
                    new Vector2(2, -1),
                    new Vector2(3, -1),
                    new Vector2(4, -1),
                    new Vector2(5, -1),
                    new Vector2(6, -1),
                    new Vector2(-7, -2),
                    new Vector2(-6, -2),
                    new Vector2(-5, -2),
                    new Vector2(-8, -3),
                    new Vector2(-7, -3),
                    new Vector2(-6, -3),
                    new Vector2(-5, -3),
                    new Vector2(-4, -3),
                    new Vector2(-3, -3),
                    new Vector2(-2, -3),
                    new Vector2(2, -3),
                    new Vector2(3, -3),
                    new Vector2(4, -3),
                    new Vector2(5, -3),
                    new Vector2(6, -3),
                    new Vector2(7, -3),
                    new Vector2(8, -3),
                    new Vector2(-8, -4),
                    new Vector2(-7, -4),
                    new Vector2(-6, -4),
                    new Vector2(-5, -4),
                    new Vector2(-4, -4),
                    new Vector2(-3, -4),
                    new Vector2(-2, -4),
                    new Vector2(2, -4),
                    new Vector2(3, -4),
                    new Vector2(4, -4),
                    new Vector2(5, -4),
                    new Vector2(6, -4),
                    new Vector2(7, -4),
                    new Vector2(8, -4)
                };
                return templateSpaces4;
            case 5:
                //Debug.Log("Getting template 5 data");
                List<Vector2> templateSpaces5 = new()
                {
                    new Vector2(-8, 4),
                    new Vector2(-7, 4),
                    new Vector2(-5, 4),
                    new Vector2(-4, 4),
                    new Vector2(-3, 4),
                    new Vector2(-2, 4),
                    new Vector2(3, 4),
                    new Vector2(4, 4),
                    new Vector2(5, 4),
                    new Vector2(6, 4),
                    new Vector2(7, 4),
                    new Vector2(8, 4),
                    new Vector2(-8, 3),
                    new Vector2(-7, 3),
                    new Vector2(-5, 3),
                    new Vector2(-4, 3),
                    new Vector2(-3, 3),
                    new Vector2(-2, 3),
                    new Vector2(3, 3),
                    new Vector2(4, 3),
                    new Vector2(5, 3),
                    new Vector2(6, 3),
                    new Vector2(7, 3),
                    new Vector2(8, 3),
                    new Vector2(-8, 2),
                    new Vector2(-7, 2),
                    new Vector2(-3, 2),
                    new Vector2(-2, 2),
                    new Vector2(6, 2),
                    new Vector2(7, 2),
                    new Vector2(-6, 1),
                    new Vector2(-5, 1),
                    new Vector2(-4, 1),
                    new Vector2(-3, 1),
                    new Vector2(-2, 1),
                    new Vector2(-1, 1),
                    new Vector2(0, 1),
                    new Vector2(1, 1),
                    new Vector2(2, 1),
                    new Vector2(3, 1),
                    new Vector2(4, 1),
                    new Vector2(6, 1),
                    new Vector2(-6, 0),
                    new Vector2(-5, 0),
                    new Vector2(-4, 0),
                    new Vector2(-3, 0),
                    new Vector2(-2, 0),
                    new Vector2(-1, 0),
                    new Vector2(0, 0),
                    new Vector2(1, 0),
                    new Vector2(2, 0),
                    new Vector2(3, 0),
                    new Vector2(4, 0),
                    new Vector2(6, 0),
                    new Vector2(-5, -1),
                    new Vector2(-4, -1),
                    new Vector2(-3, -1),
                    new Vector2(-2, -1),
                    new Vector2(-1, -1),
                    new Vector2(0, -1),
                    new Vector2(1, -1),
                    new Vector2(2, -1),
                    new Vector2(3, -1),
                    new Vector2(4, -1),
                    new Vector2(6, -1),
                    new Vector2(-8, -2),
                    new Vector2(-7, -2),
                    new Vector2(-1, -2),
                    new Vector2(0, -2),
                    new Vector2(3, -2),
                    new Vector2(4, -2),
                    new Vector2(7, -2),
                    new Vector2(8, -2),
                    new Vector2(-8, -3),
                    new Vector2(-7, -3),
                    new Vector2(-6, -3),
                    new Vector2(-5, -3),
                    new Vector2(-4, -3),
                    new Vector2(-3, -3),
                    new Vector2(3, -3),
                    new Vector2(4, -3),
                    new Vector2(5, -3),
                    new Vector2(6, -3),
                    new Vector2(7, -3),
                    new Vector2(8, -3),
                    new Vector2(-8, -4),
                    new Vector2(-7, -4),
                    new Vector2(-6, -4),
                    new Vector2(-5, -4),
                    new Vector2(-4, -4),
                    new Vector2(-3, -4),
                    new Vector2(3, -4),
                    new Vector2(4, -4),
                    new Vector2(5, -4),
                    new Vector2(6, -4),
                    new Vector2(7, -4),
                    new Vector2(8, -4)
                };
                return templateSpaces5;
            default:
                List<Vector2> templateSpacesNull = new()
                {

                };
                return templateSpacesNull;
        }
    }
}